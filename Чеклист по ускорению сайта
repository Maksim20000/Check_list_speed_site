Как сделать чтобы любой сайт на Tilda быстрее загружался?
Это пошаговый чеклист который поможет тебе сделать загрузку любой страницы на Tilda быстрее. Шаги я специально расположил в последовательности от простого к сложному, чтобы можно было просто приступать и сразу делать.
Google pagespeed insights - https://pagespeed.web.dev/
Справка по измеряемым Pagespeed показателям - https://web.dev/vitals/10+ мин.Видео-инструкцияВидео-инструкцияДругоеОбновление от 31.12.23 - В слайдер были добавлены новые поля, а также recid теперь нужно писать без приставки "#rec", поэтому если вдруг что-то не работает, то см. видео, а также текстовую инструкцию ниже↓!Чек-лист
Шаги оптимизации:
Сжать все фотографии на странице через компрессор (Обязательно перепроверь качество сжатия после прогона. Иногда компрессор может убить цветопередачу). Важно: не грузи векторные изображения в jpg\png, а обычные не векторные изображения в svg
Примеры компрессоров:
- https://compresspng.com/
- https://www.img2go.com/compress-image
- https://www.iloveimg.com/compress-image
- https://tinypng.com/
- https://compress-online.com/compress-svg
Если на странице есть видеоролики, то их тоже необходимо прогнать через компрессор. Обрати внимание что скорость загрузки видеороликов также зависит от ресурса, на котором они размещены, поэтому одно видео может грузиться быстро на одном ресурсе и очень долго на другом
Примеры компрессоров:
- https://www.freeconvert.com/video-compressor
- https://www.mp4compress.com/
Загрузить все svg через add vector (НО ТОЛЬКО для блоков, которые видны на первом экране сайта!!!)
Не делать большое количество брейкпоинтов адаптива (1200 1366 1480 1600 1920 и в космос:D)
Заменить зеро блоки в которых только один заголовок \ одна фотка \ простой функционал заменяемый стандартным блоком на стандартный блок или объединить такой зеро с другим
Сократить \ оптимизировать количество анимации на первом экране (только ту, что задерживает появление контента, типо fade in)
Убрать все неиспользуемые начертания шрифтов и возможно включить "показывать системный шрифт при загрузке" или display: swap (Имей в виду, что при его включении возникает т.н. "fout", когда в начале загрузки показывается системный шрифт, а позже другой, который заменяет системный и возникает "мерцание текста" во время этой замены)
Проверяем чтобы в head сайта не было много кода (в идеале чтобы там вообще ничего не было, а все метрики и аналитики были подключены через настройки)
ОТДЕЛЬНОЕ ВНИМАНИЕ удели тому, чтобы не перегружать сайт какими только можно счётчиками аналитики и их функционалом. Т.е. со стороны оптимизации, если у тебя подключены метрика с постоянно работающим вебвизором, картой кликов, bounce, отслеживанием кликов по ссылкам, тег менеджер и ещё парочку сервисов сквозной аналитики, в которых тоже "давай включим всего и побольше", то сайт будет медленно работать, просто потому что слишком много всего подключено.

Чем больше таких сервисов, тем к большему количеству серверов делает запросы твоя страница при загрузке и тем намного большее количество кода приходится обрабатывать браузеру посетителя. Подключай ТОЛЬКО критически важные системы аналитики, которые ты или маркетолог анализируете чуть ли не каждый день и по возможности включай тяжелые вещи по типу вебвизора только на период маркетингового исследования поведения пользователей на сайте.

Также подключай метрику через встроенную интеграцию Тильды (т.е. в настройках во вкладке "аналитика", а не через добавление кода в head), так как в таком случае у метрики будет отложенная загрузка (2 секунды после загрузки страницы), а в варианте с кодом в head нет.
Код из Настроек сайта => Ещё => Пользовательские CSS стили переносим в блоки Т123 на странице, оставляя в настройках только крайне необходимый CSS, который влияет на отображение первых экранов страниц сайта (так код не будет блокировать загрузку контента. Это рекомендация Google PageSpeed)
Минимизируем общее количество блоков Т123 на странице объединяя их между собой если это возможно и расставляем либо сразу после блоков, на которые эти Т123 влияют, либо вообще вниз страницы (только перепроверь работоспособность кода после таких манипуляций)
Прогоняем код через компрессор (ОБЯЗАТЕЛЬНО перепроверь его работоспособность. Частенько компрессор может положить код, поэтому с этим пунктом будь особенно внимателен и используй на свой страх и риск)
Примеры компрессоров кода:
- https://htmlcompressor.com/compressor/
Не делаем в целом большое количество контента на странице (например 40+ блоков будет многовато, лучше разбить на подстраницы). ОСОБЕННО это касается зеро-блоков и pop-up
Если на странице есть код, в котором делаются запросы к content delivery network - cdn, то добавляем в head preconnect и prefetch (замени тут jsdelivr на любой нужный)
<link rel="preconnect" href="https://cdn.jsdelivr.net">
<link rel="dns-prefetch" href="https://cdn.jsdelivr.net">СкопироватьОтчистить поля- Пользуемся методом взаимоисключения. Последовательно один за другим отключаем блоки, перузагружаем страницу и смотрим на скорость загрузки, анализируем - стало лучше или нет.
- Если таким методом ты дошёл до того, что у тебя на странице вообще нет блоков и при этом нет футера \ хедера и нет кода в head и Пользовательских CSS, то значит есть смысл проверить своё браузер \ устройство \ интернет на наличие проблем и попробовать отчистить кеш \ загрузить сайт с другого устройства и интернета другого провайдера.
В браузерах Chrome, Firefox, Edge открыть окно отчистки кеша можно нажав ctrl+shift+delete
